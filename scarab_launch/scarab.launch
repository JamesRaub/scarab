<launch>
  <!-- Bring UTM30, battery monitor, diagnostics, and motors online

       Use robot_monitor to see diagnostics
  -->
  <arg name="diag_rate" default="0.4" />

  <node name="tf_throttle_$(env ROS_HOSTNAME)" pkg="topic_tools" type="throttle"
        args="bytes /$(env ROS_HOSTNAME)/tf 1024 1.0 /tf" />

  <group ns="$(env ROS_HOSTNAME)" >
    <param name="tf_prefix" value="$(env ROS_HOSTNAME)" />
    <remap from="/tf" to="tf" />
    <node pkg="tf" type="static_transform_publisher" name="transformer"
          args="0 0 0.0 0 0 0 base laser 500" />

    <node name="laser" pkg="hokuyo_node" type="hokuyo_node" output="screen">
      <param name="cluster" value="1" />
      <param name="skip" value="1" />
      <param name="intensity" value="false" />
      <param name="min_ang" value="-2.2689" />
      <param name="max_ang" value="2.2689" />
      <param name="port" value="/dev/hokuyo" />
      <param name="frame_id" value="/$(env ROS_HOSTNAME)/laser" />
      <remap from="/diagnostics" to="laser_diagnostics" />
    </node>
    <node name="laser_diagnostics" pkg="topic_tools" type="throttle"
          args="messages /$(env ROS_HOSTNAME)/laser_diagnostics $(arg diag_rate) /diagnostics" output="screen"/>
    <node name="laser_throttle" pkg="topic_tools" type="throttle"
          args="messages /$(env ROS_HOSTNAME)/scan 0.25" />

    <!-- Battery does not provide namespace for its diagnostic info -->
    <!-- <node name="battery" pkg="ocean_battery_driver" type="ocean_server" -->
    <!--       output="screen"> -->
    <!--   <param name="number_of_ports" value="1" /> -->
    <!--   <param name="port0" value="/dev/bb04" /> -->
    <!--   <remap from="/diagnostics" to="battery_diagnostics" /> -->
    <!-- </node> -->
    <!-- <node name="battery_diagnostics" pkg="topic_tools" type="throttle" -->
    <!--       args="messages /$(env ROS_HOSTNAME)/battery_diagnostics $(arg diag_rate) /diagnostics "/> -->

    <node pkg="roboclaw" type="roboclaw_node" name="motor" respawn="false"
          output="screen">
      <param name="axle_width" value="0.272" />
      <param name="accel_max" value="0.8" />
      <param name="odom_frame" value="odom" />
      <param name="base_frame" value="base" />
      <param name="motor_to_wheel_ratio" value="40" />
      <param name="freq" value="20.0" />
    </node>

    <node name="odom_throttle" pkg="topic_tools" type="throttle"
          args="messages /$(env ROS_HOSTNAME)/motor/odom 2.0" />
  </group>
</launch>

<!-- {accel_max: 1.0, axle_width: 0.26, base_frame: base, freq: 25, max_wheel_vel: 0.3, -->
<!--   motor_to_wheel_ratio: 38, odom_frame: odom, pid_param_id: 0, pid_qpps: 500000} -->

      <!-- <param name="pid_qpps" value="100000" /> -->

<!-- export VAL=44; rxplot /scarab$VAL/motor/motor_state/left_qpps_sp,/scarab$VAL/motor/motor_state/left_qpps  /scarab$VAL/motor/motor_state/right_qpps_sp,/scarab$VAL/motor/motor_state/right_qpps /scarab$VAL/motor/motor_state/v,/scarab$VAL/motor/motor_state/v_sp -->
<!-- plotting topics /scarab44/motor/motor_state/left_qpps_sp, /scarab44/motor/motor_state/left_qpps, /scarab44/motor/motor_state/right_qpps_sp, /scarab44/motor/motor_state/right_qpps, /scarab44/motor/motor_state/v, /scarab44/motor/motor_state/v_sp -->
