/* gMulti.tea */
/* subroutine calls for multi-file TEA application */

int run_ii(char file, int i1, int i2)
{
  int val = 0;
  asm
  {
    pushmb	aPortAddress
    pushlb	8
    pushlb	cmdVM_RUN
    pushlb	7		/* flags */
    pushsb	13		/* get file */
    pushlb	0		/* process 0 */
    pushss	14
    pushss	14
    pushlb	10
    popcmd
    pushms	aPortSemaphore + aGARCIA_MOTO_PID_USER
    popss	2
  }
  return val;
}

int run_i(char file, int i1)
{
  int val = 0;
  asm
  {
    pushmb	aPortAddress
    pushlb	6
    pushlb	cmdVM_RUN
    pushlb	7		/* flags */
    pushsb	11		/* get file */
    pushlb	0		/* process 0 */
    pushss	12
    pushlb	8
    popcmd
    pushms	aPortSemaphore + aGARCIA_MOTO_PID_USER
    popss	2
  }
  return val;
}

int run_ci(char file, char c1, int i1)
{
  int val = 0;
  asm
  {
    pushmb	aPortAddress
    pushlb	7
    pushlb	cmdVM_RUN
    pushlb	7		/* flags */
    pushsb	12		/* get file */
    pushlb	0		/* process 0 */
    pushsb	13
    pushss	13
    pushlb	9
    popcmd
    pushms	aPortSemaphore + aGARCIA_MOTO_PID_USER
    popss	2
  }
  return val;
}

int gMulti_Turn(char motor, int r)
{
  return run_ci(aGARCIA_MOTO_FILE_SWPIVOT, motor, r);
}

int gMulti_Move(int rh, int rl)
{
  return run_ii(aGARCIA_MOTO_FILE_MOVE, rh, rl);
}

int gMulti_Pivot(int r)
{
  return run_i(aGARCIA_MOTO_FILE_PIVOT, r);
}

int gMulti_Hug(char side, char mode, int wthr)
{
  int flags;
  flags = side;
  flags = ((flags << 8) | mode);
  return run_ii(aGARCIA_MOTO_FILE_WALLHUG, flags, wthr);
}

int gMulti_Align(char side, char mode, int wthr)
{
  int flags;
  flags = side;
  flags = ((flags << 8) | mode);
  return run_ii(aGARCIA_MOTO_FILE_ALIGN, flags, wthr);
}

int gMulti_Null(int tdamp)
{
  return run_i(aGARCIA_MOTO_FILE_NULL, tdamp);
}

int gMulti_Dock(char side, int wthr)
{
  return run_ci(aGARCIA_MOTO_FILE_DOCK, side, wthr);
}

