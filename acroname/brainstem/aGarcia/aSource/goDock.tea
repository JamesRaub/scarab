/* goDock.tea (moto,7) */
/* docking task (EXPERIMENTAL) */

#include "gCommon.tea"

#define	REARMASK	~(1<<aGARCIA_GP_BIT_ENABLEREAR)

void back_into_dock(int v)
{
  int status;
  
  /* GP monitor will take over */
  
  aMotion_SetRampVelocity(-v,-v);
  while (1)
  {
    if (gc_aGetStatus) break;
  }
  
  status = gc_aGetStatus;
  
  if ((status == aGARCIA_ERRFLAG_REARR_LEFT) || (status == aGARCIA_ERRFLAG_REARR_RIGHT))
  {

    /* get snug */
    aMotion_SetRampVelocity(-v,-v);
    aCore_Sleep(5000);
    gc_stop_vdamp();
  
    /* ---- NOT IMPLEMENTED YET ----*/
    /* check for voltage detection */
    /* indicate success if voltage found */
  }
  else
  {
    gc_stop_vdamp();
  }
}



int main(int r)
{
  int v;
  int acctm;
  int status = 0;

  
  /* INITIALIZE INPUT */
  
  v = gc_read_pads(aGARCIA_MOTO_PADS_DEFVEL);
  acctm = gc_read_pads(aGARCIA_MOTO_PADS_DEFACCTM);


  /* SET MOTION STATE BASED ON INPUT */
  
  if (v)
  {
    gc_set_stall_params(v, STALL_LOAD_DOCK);
    gc_init_vdamp(acctm);
    
    /* reconfigure monitors */
    gc_const_wrpadb(aGARCIA_MOTO_PADB_ENDFLAGS, aGARCIA_ENDCTRL_REAR);
    gc_write_ctr_gp(aGARCIA_GP_CTR_REARTHR, aGARCIA_DOCK_THR);
    gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORMASK, REARMASK);
    gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORIO, (1<<aGARCIA_GP_BIT_ENABLEREAR));
    gc_write_padb_gp(aGARCIA_GP_PADB_REARCTRL, aGARCIA_REARCTRL_DOCK);

    /* restart monitor */
    gc_aClrStatus;
    gc_aMonEnable;

    /* give time for monitors to stabilize */
    gc_const_sleep(750);

    /* then attempt motion */
    gc_aClrEnc32;
    back_into_dock(v);
  }
    
  /* motion done so turn monitors off */
  gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORMASK, REARMASK);
  gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORIO, 0);
  gc_write_padb_gp(aGARCIA_GP_PADB_REARCTRL, 0);
  gc_aMonDisable;

  status = gc_read_pads(aGARCIA_MOTO_PADS_STATUS);
  if (gc_read_padb(aGARCIA_MOTO_PADB_EXEFLAGS) & aGARCIA_EXECTRL_USER)
  {
    aMulti_Signal(aGARCIA_MOTO_PID_USER, status);
  }
  return status;
}
