/* goPivot.tea (moto,2) */
/* rotate fixed amount about center axis */

/* 2-byte signed rotation ticks input */
/* 2-byte velocity input (scratch pad, always positive) */

#include "gCommon.tea"

#define	REARMASK	~(1<<aGARCIA_GP_BIT_ENABLEREAR)

void pivot(int r, int absv)
{
  /* preload rl0 = r, rl1 = -r */
  asm
  {
    pushss	6
    pushlb	aMOTION_RMPCFGW + aMOTION_RIDSTL
    popbm	aPortMotion+0*aPortMotionBlockSize+aOffsetMotionRmpCfg
    pushss	6
    negs
    pushlb	aMOTION_RMPCFGW + aMOTION_RIDSTL
    popbm	aPortMotion+1*aPortMotionBlockSize+aOffsetMotionRmpCfg
  }

  if (r & 0x8000)
  {
    aMotion_SetRampVelocity(-absv, absv);
    asm
    {
      /* r is negative, r0=(-1,r) r1=(0,-r) */
      pushls	-1
      pushlb	aMOTION_RMPCFGW + aMOTION_RIDSTH
      popbm	aPortMotion+0*aPortMotionBlockSize+aOffsetMotionRmpCfg
      pushls	0
      pushlb	aMOTION_RMPCFGW + aMOTION_RIDSTH
      popbm	aPortMotion+1*aPortMotionBlockSize+aOffsetMotionRmpCfg
    }
  }
  else
  {
    aMotion_SetRampVelocity(absv, -absv);
    asm
    {
      /* r is positive, r0=(0,r) r1=(-1,-r) */
      pushls	0
      pushlb	aMOTION_RMPCFGW + aMOTION_RIDSTH
      popbm	aPortMotion+0*aPortMotionBlockSize+aOffsetMotionRmpCfg
      pushls	-1
      pushlb	aMOTION_RMPCFGW + aMOTION_RIDSTH
      popbm	aPortMotion+1*aPortMotionBlockSize+aOffsetMotionRmpCfg
    }
  }
  gc_perform_dual_ramp();
}

int main(int r)
{
  int v;
  int acctm;
  int status = 0;


  /* INITIALIZE INPUT */
  
  v = gc_read_pads(aGARCIA_MOTO_PADS_DEFVEL);
  acctm = gc_read_pads(aGARCIA_MOTO_PADS_DEFACCTM);
  

  /* SET MOTION STATE BASED ON INPUT */
  
  if (v && r)
  {
    gc_set_stall_params(v, STALL_LOAD);
    gc_init_ramp(acctm);

    /* reconfigure monitors */
    gc_const_wrpadb(aGARCIA_MOTO_PADB_ENDFLAGS, aGARCIA_ENDCTRL_REAR);
    if (r & 0x8000)
    {
      gc_write_padb_gp(aGARCIA_GP_PADB_REARCTRL, aGARCIA_REARCTRL_LEFT);
    }
    else
    {
      gc_write_padb_gp(aGARCIA_GP_PADB_REARCTRL, aGARCIA_REARCTRL_RIGHT);
    }
    gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORMASK, REARMASK);
    gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORIO, (1<<aGARCIA_GP_BIT_ENABLEREAR));


    /* restart monitor */
    gc_aClrStatus;
    gc_aMonEnable;

    /* give time for monitors to stabilize */
    gc_const_sleep(750);

    /* then attempt motion */    
    pivot(r, v);
  }
  
  /* motion done so turn monitors off */
  gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORMASK, REARMASK);
  gc_write_padb_gp(aGARCIA_GP_PADB_MIRRORIO, 0);
  gc_write_padb_gp(aGARCIA_GP_PADB_REARCTRL, 0);
  gc_aMonDisable;

  status = gc_read_pads(aGARCIA_MOTO_PADS_STATUS);
  if (gc_read_padb(aGARCIA_MOTO_PADB_EXEFLAGS) & aGARCIA_EXECTRL_USER)
  {
    aMulti_Signal(aGARCIA_MOTO_PID_USER, status);
  }
  return status;
}
