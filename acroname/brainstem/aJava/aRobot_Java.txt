
                aRobot Java Information

The Java interface for the aRobot API is an example 
client of the aRobotAgent API server.  This means that
you can take any API definition and run the aRobotAgent
to serve this API over TCP/IP.  The Java code then
connects to this server and interacts with the API 
over the socket (potentially remotely).

Here are some quick notes on how to get this up and 
running using our Garcia robot as the example case.

1. Configure the aRobotAgent application.

First, you need to properly configure the aRobotAgent
application to serve the garcia API.  This API is 
defined in the .robot file which should be in
the aObject directory.  This code completely describes
the objects and properties for interacting with the 
Robot being used.

If you are running the aRobotAgent code from Windows
or the Mac, you will need to create an aRobotAgent
configuration file named "aRobotAgent.config" in the
aBinary directory of your code (same directory where
the aRobotAgent application sits).

In this file, you will need the single line.  For example,
if you have an API named "garcia_api" defined in the 
aObject directory file "garcia_api.robot" you would say:

api_name = garcia_api

If you have things in place, when you start up the agent
you should see the garcia_api listed as what is being
served.

2. Configure the aRobotAgent link or links

An API definition file (.robot) can have one or more
links defined.  In the case of the Garcia, there is 
one link to the BrainStems which is serial.  This is
configured in a config file with a name that matches
the API definition file.  For Garcia, this would be 
"garcia_api.config".  This file would have a few
lines to configure the link.  In the Garcia case, 
these lines are something like:

  baudrate = 38400
  camera-boom = yes
  portname = tts/2

or, for a Garcia simulated in Symonym:

  portname = ip
  ip-address = 10.0.0.1
  ip-port = 8006

This configures the link so the aRobotAgent can build
the correct communication link for the API.

3. Configure the Java API client to use the IP address and
port of the machine running the aRobotAgent.  This may
or may not be the same machine.  This file is named
jRobot.config.  Typical entries in this config file 
would be:

robot_address = 10.0.0.1
robot_port = 8006

This specifies where the jRobot Java class should try
to connect to the aRobotAgent server.

RUNNING

With these 3 configuration files specified, you are 
ready to run your code.  Typically, this means just
starting the aRobotAgent, getting a heartbeat with the 
robot implementation, and running your code in Java.  
Be sure you have built the Java class required.  
For the included garcia examples, you would run with 
something like:

java -cp . garcia_triangle

This should start the Garcia in a small triangle 
pattern on the floor.

Keep in mind that the aRobotAgent code must be
running first to allow your Java client to connect.
When the Java code finishes, the agent should reset
itself upon the Java code's exit.  Another client
can then try to estalish a connection, perhaps with a 
different example program.

----------- Thanks for using our aRobot API! -----------
